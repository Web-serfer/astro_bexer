import { defineMiddleware } from "astro:middleware";
import { auth } from "./lib/auth/auth";

export const onRequest = defineMiddleware(async (context, next) => {
  // –≠—Ç–æ—Ç –ª–æ–≥ –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –ø—Ä–∏ –ö–ê–ñ–î–û–ú –∑–∞–ø—Ä–æ—Å–µ (–∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∫–∞—Ä—Ç–∏–Ω–∫–µ, api)
  console.log(`\nüöÄ MIDDLEWARE EXECUTED for path: ${context.url.pathname}`);

  try {
    const sessionData = await auth.api.getSession({
      headers: context.request.headers,
    });

    if (sessionData) {
      console.log(
        `‚úÖ Session found in middleware for user: ${sessionData.user.email}`,
      );
      context.locals.user = sessionData.user;
      context.locals.session = sessionData.session;
    } else {
      console.log("‚ùå No session found in middleware.");
      context.locals.user = null;
      context.locals.session = null;
    }
  } catch (e: any) {
    console.error("üî• ERROR in middleware:", e.message);
    // –ù–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω—É–ª—è–µ–º locals
    context.locals.user = null;
    context.locals.session = null;
  }

  console.log(
    "‚û°Ô∏è Middleware finished, passing to next(). Locals:",
    context.locals,
  );
  return next();
});
